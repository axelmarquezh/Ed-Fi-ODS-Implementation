# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Publish to Docker Hub
on:
  workflow_run:
    workflows:
      - "Docker Test"
    types:
      - completed
    branches:
      [main, 'b-v*-patch*','feature-*']
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      package_version:
        description: 'Package Version'
        required: true
        default: "7.4"
        type: string

permissions: read-all

env:
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}
  CURRENT_STANDARD_VERSION: "5.2.0"
  PACKAGE_VERSION: "7.4"
  EVENT_NAME: ${{ GITHUB.EVENT_NAME }}
  EVENT_ACTION: ${{ GITHUB.EVENT.ACTION }}
  BASE_BRANCH: ${{ GITHUB.HEAD_REF || GITHUB.REF_NAME }}

jobs:
  cancel-if-required-workflows-did-not-succeed:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-24.04
    steps:
      - run: throw "Cancelling because the required workflows did not succeed."
        shell: pwsh

  FindStandardAndExtensionVersions:
    needs: cancel-if-required-workflows-did-not-succeed
    uses: Ed-Fi-Alliance-OSS/Ed-Fi-ODS/.github/workflows/Find Standard and Extension Versions.yml@874b608a0f3a14243e0035dd1222169fafcbe8d3
    with:
      calling_branch: ${{ github.head_ref || github.ref_name }}

  docker-publish:
    if: (needs.FindStandardAndExtensionVersions.outputs.StandardVersions != '' &&
        needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions != '')
    needs: FindStandardAndExtensionVersions
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
        dockerfile:
          [
            { name: "ods-api-bulk-load-console", path: "alpine" },
            { name: "ods-api-db-admin", path: "alpine/pgsql" },
            { name: "ods-api-db-ods-minimal", path: "alpine/pgsql" },
            { name: "ods-api-db-ods-sandbox", path: "alpine/pgsql" },
            { name: "ods-api-swaggerui", path: "alpine" },
            { name: "ods-api-web-api", path: "alpine/pgsql" },
            { name: "ods-api-web-api", path: "alpine/mssql" },
            { name: "ods-api-web-sandbox-admin", path: "alpine/pgsql" },
            { name: "ods-api-web-sandbox-admin", path: "alpine/mssql" }
          ]        
    name: ${{ matrix.dockerfile.name }}/${{ matrix.dockerfile.path }} Image for (Standard ${{ matrix.StandardVersion }} Extension ${{ matrix.ExtensionVersion }})     
    steps:
      - run: echo "success"